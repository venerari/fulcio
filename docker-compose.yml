version: "3"

services:
  fulcio-server:
    image: docker.io/venerayan/fulcio_fulcio-server:latest
    command: [
      "fulcio-server",
      "serve",
      "--host=0.0.0.0",
      "--port=5555",
      "--grpc-port=5554",
      "--ca=ephemeralca",
      # "--ca=fileca",
      # "--fileca-key=/config/tls/tls.key", 
      # "--fileca-cert=/config/tls/tls.crt",
      # "--fileca-key-passwd=changeit",
      "--config-path=/config/tls/fulcio-config.yaml",
      "--ct-log-url=https://ct_server:6962/test",
      "--ct-log.tls-ca-cert=/config/tls/ca.crt",
      # Uncomment this for production logging
      "--log_type=prod",
      ]
    restart: always # keep the server running
    ports:
      - "49174:5555"
      - "5554:5554"
      - "2113:2112"
    volumes:
      - rvenera_ca:/config/tls
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s
    depends_on:
      dex-idp:
        condition: service_healthy
    read_only: true
  dex-idp:
    image: docker.io/venerayan/fulcio_dex-idp:latest
    user: root
    command: [
      "dex",
      "serve",
      "/etc/config/docker-compose-config.yaml",
      ]
    restart: always # keep the server running
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:8888/auth/healthz"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
  ctfe_init:
    image: docker.io/venerayan/fulcio_ctfe_init:latest
    depends_on:
      trillian-log-server:
        condition: service_started
      fulcio-server:
        condition: service_healthy
    volumes:
      - ctfeConfig:/etc/config/:rw
  ct_server:
    image: docker.io/venerayan/fulcio_ct_server:latest
    volumes:
      - ctfeConfig:/etc/config/:rw #ro
      - rvenera_ca:/config/tls:z      
    command: [
        "--log_config" ,"/etc/config/ct_server.cfg",
        "--log_rpc_server", "trillian-log-server:8096",
        "--http_endpoint", "0.0.0.0:6962",
        "--tls_certificate", "/config/tls/tls.crt",
        "--tls_key", "/config/tls/tls.key",
        "--alsologtostderr",
    ]
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost:6962/healthz"]
      interval: 5s
      timeout: 3s
      retries: 15
      start_period: 15s
    restart: always # retry while ctfe_init is running
    depends_on:
      trillian-log-server:
        condition: service_started
      trillian-log-signer:
        condition: service_started
      ctfe_init:
        condition: service_completed_successfully
    ports:
      - "6962:6962"
  mysql:
    platform: linux/amd64
    image: docker.io/venerayan/db_server:v1.7.2
    environment:
      - MYSQL_ROOT_PASSWORD=zaphod
      - MYSQL_DATABASE=test
      - MYSQL_USER=test
      - MYSQL_PASSWORD=zaphod
    restart: always # keep the MySQL server running
    # ports:
      # - "49306:3306"      
      # - "33060:33060"   
    healthcheck:
      test: "mysqladmin -h 127.0.0.1 --user=$MYSQL_USER --password=$MYSQL_ROOT_PASSWORD -s ping" 
      interval: 10s
      timeout: 3s
      retries: 9
      start_period: 90s
    volumes:
      - mysql:/var/lib/mysql
  trillian-log-server:
    image: docker.io/venerayan/trillian_log_server:v0.7.24
    command: [
      "--storage_system=mysql",
      "--mysql_uri=test:zaphod@tcp(mysql:3306)/test",
      "--rpc_endpoint=0.0.0.0:8096",
      "--http_endpoint=0.0.0.0:8095",
      "--alsologtostderr",
    ]
    restart: always # retry while mysql is starting up
    ports:
      - "8095:8090"
      - "8096:8091"
    depends_on:
      mysql:
        condition: service_healthy
  trillian-log-signer:
    image: docker.io/venerayan/trillian_log_signer:v0.7.24
    command: [
      "--storage_system=mysql",
      "--mysql_uri=test:zaphod@tcp(mysql:3306)/test",
      "--rpc_endpoint=0.0.0.0:8095",
      "--http_endpoint=0.0.0.0:8096",
      "--force_master",
      "--alsologtostderr",
    ]
    restart: always # retry while mysql is starting up
    ports:
      - "8097:8096"
    depends_on:
      mysql:
        condition: service_healthy
volumes:
  ctfeConfig: {}
  mysql: {}
  rvenera_ca:
    external: true